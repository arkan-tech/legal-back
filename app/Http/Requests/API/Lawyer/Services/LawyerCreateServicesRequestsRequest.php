<?php

namespace App\Http\Requests\API\Lawyer\Services;

use App\Http\Requests\API\BaseRequest;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class LawyerCreateServicesRequestsRequest extends BaseRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */


    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, mixed>
     */
    public function rules()
    {
        return [
            'service_id' => 'required|numeric|exists:services,id',
            'priority' => 'required|numeric|exists:client_reservations_importance,id',
            'description' => 'required',
            'file' => 'sometimes|mimes:png,jpg,jpeg,PNG,JPG,JPEG,pdf',
            'accept_rules' => 'required|in:1',
            'lawyer_id' => 'sometimes|string|exists:lawyers,id'
        ];
    }

    public function messages()
    {
        return [
            'description.required' => 'حقل المحتوى مطلوب ',
            'service_id.required' => 'حقل الخدمة مطلوب ',
            'service_id.numeric' => 'حقل الخدمة يجب ان يكون ارقام ',
            'service_id.exists' => 'حقل الخدمة غير موجود ',
            'priority.required' => 'حقل الاهمية مطلوب ',
            'priority.numeric' => 'حقل الاهمية يجب ان يكون ارقام ',
            'priority.exists' => 'حقل الاهمية غير موجود ',
            'file.mimes' => 'حقل الملف يجب ان يكون بصيغة png,jpg,jpeg,PNG,JPG,JPEG,pdf ',
            'accept_rules.required' => 'حقل الموافقة على الشروط مطلوب',
            'accept_rules.in' => 'يجب الموافقة على حقل الموافقة على الشروط ',
        ]; // TODO: Change the autogenerated stub
    }
}
