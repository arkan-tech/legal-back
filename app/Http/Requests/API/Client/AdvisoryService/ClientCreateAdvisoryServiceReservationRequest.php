<?php

namespace App\Http\Requests\API\Client\AdvisoryService;

use App\Http\Requests\API\BaseRequest;

class ClientCreateAdvisoryServiceReservationRequest extends BaseRequest
{


    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, mixed>
     */
    public function rules()
    {
        return [
            'sub_price_id' => 'required|numeric|exists:advisory_services_sub_categories_prices,id',
            'description' => 'required',
            'files' => 'sometimes|array|max:5',
            'files.*' => 'mimes:png,jpg,jpeg,PNG,JPG,JPEG,pdf,PDF',
            // 'voice_file' => 'sometimes|mimes:mp3,wav,m4a',
        ];
    }

    public function messages()
    {
        return [
            'advisory_services_id.required' => 'يجب اختيار استشارة',
            'advisory_services_id.numeric' => ' الاستشارة يجب ان يكون ارقام',
            'advisory_services_id.exists' => ' الاستشارة غير موجودة',

            'type_id.required' => 'يجب اختيار نوع استشارة',
            'type_id.numeric' => 'نوع الاستشارة يجب ان يكون ارقام',
            'type_id.exists' => ' نوع الاستشارة غير موجود',

            'content.exists' => ' محتوى الاستشارة  مطلوب',
            'accept_rules.in' => ' يجب الموافقة على السياسات والشروط',

            'files.array' => 'يجب أن تكون الملفات في صورة مصفوفة',
            'files.max' => 'لا يمكن تحميل أكثر من 5 ملفات',
            'files.*.mimes' => 'الملفات يجب أن تكون بصيغة png,jpg,jpeg,PNG,JPG,JPEG,pdf,PDF',
            'voice_file.mimes' => 'ملف الصوت يجب أن يكون بصيغة mp3 أو wav',
        ]; // TODO: Change the autogenerated stub
    }
}
